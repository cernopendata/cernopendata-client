name: ci

on: [push, pull_request]

jobs:
  docker-tests:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Check Docker build
        run: ./run-tests.sh --docker-build

      - name: Check Docker tests
        run: sudo ./run-tests.sh --docker-tests

  docs-sphinx:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install libcurl4-openssl-dev libgnutls28-dev libssl-dev uuid-dev

      - name: Install Python dependencies
        run: pip install -e .[docs]

      - name: Check Sphinx docs build
        run: ./run-tests.sh --docs-sphinx

  format-black:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check formatting of Python code
        run: |
          pip install black
          ./run-tests.sh --format-black

  format-prettier:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Check formatting of Markdown etc files
        run: |
          npm install prettier --global
          ./run-tests.sh --format-prettier

  format-shfmt:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check formatting of shell scripts
        run: |
          sudo apt-get install shfmt
          ./run-tests.sh --format-shfmt

  lint-commitlint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest

      - name: Check commit message compliance of the recently pushed commit
        if: github.event_name == 'push'
        run: |
          ./run-tests.sh --lint-commitlint HEAD~1 HEAD

      - name: Check commit message compliance of the pull request
        if: github.event_name == 'pull_request'
        run: |
          ./run-tests.sh --lint-commitlint ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} ${{ github.event.pull_request.number }}

  lint-hadolint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Check linting of Dockerfiles
        run: ./run-tests.sh --lint-hadolint

  lint-flake8:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check linting of Python code
        run: |
          pip install flake8
          ./run-tests.sh --lint-flake8

  lint-jsonlint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Check linting of JSON files
        run: |
          npm install jsonlint --global
          ./run-tests.sh --lint-jsonlint

  lint-manifest:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check linting of Python manifest
        run: |
          pip install check-manifest
          ./run-tests.sh --lint-manifest

  lint-markdownlint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Check linting of Markdown files
        run: |
          npm install markdownlint-cli2 --global
          ./run-tests.sh --lint-markdownlint

  lint-pydocstyle:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check linting of Python docstrings
        run: |
          pip install pydocstyle
          ./run-tests.sh --lint-pydocstyle

  lint-shellcheck:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Check linting of shell scripts
        run: |
          sudo apt-get install shellcheck
          ./run-tests.sh --lint-shellcheck

  lint-yamllint:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Check linting of YAML files
        run: |
          pip install yamllint
          ./run-tests.sh --lint-yamllint

  python-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install libcurl4-openssl-dev libgnutls28-dev libssl-dev uuid-dev

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -e .[docs,tests,pycurl]

      - name: Check Python test suite
        run: ./run-tests.sh --python-tests

      - name: Codecov Coverage
        if: matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
